// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataContract.proto

#ifndef PROTOBUF_DataContract_2eproto__INCLUDED
#define PROTOBUF_DataContract_2eproto__INCLUDED

#include <string.h>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace DataContracts {
class CommandInvokeData;
class CommandInvokeDataDefaultTypeInternal;
extern CommandInvokeDataDefaultTypeInternal _CommandInvokeData_default_instance_;
class CommandInvokeResult;
class CommandInvokeResultDefaultTypeInternal;
extern CommandInvokeResultDefaultTypeInternal _CommandInvokeResult_default_instance_;
class MenuData;
class MenuDataDefaultTypeInternal;
extern MenuDataDefaultTypeInternal _MenuData_default_instance_;
class MenuItemData;
class MenuItemDataDefaultTypeInternal;
extern MenuItemDataDefaultTypeInternal _MenuItemData_default_instance_;
class guid;
class guidDefaultTypeInternal;
extern guidDefaultTypeInternal _guid_default_instance_;
}  // namespace DataContracts

namespace DataContracts {

namespace protobuf_DataContract_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_DataContract_2eproto

enum ShellResult {
  Ok = 0,
  Error = 1
};
bool ShellResult_IsValid(int value);
const ShellResult ShellResult_MIN = Ok;
const ShellResult ShellResult_MAX = Error;
const int ShellResult_ARRAYSIZE = ShellResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* ShellResult_descriptor();
inline const ::std::string& ShellResult_Name(ShellResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShellResult_descriptor(), value);
}
inline bool ShellResult_Parse(
    const ::std::string& name, ShellResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShellResult>(
    ShellResult_descriptor(), name, value);
}
// ===================================================================

class guid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataContracts.guid) */ {
 public:
  guid();
  virtual ~guid();

  guid(const guid& from);

  inline guid& operator=(const guid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  guid(guid&& from) noexcept
    : guid() {
    *this = ::std::move(from);
  }

  inline guid& operator=(guid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guid& default_instance();

  static inline const guid* internal_default_instance() {
    return reinterpret_cast<const guid*>(
               &_guid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(guid* other);
  friend void swap(guid& a, guid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline guid* New() const PROTOBUF_FINAL { return New(NULL); }

  guid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const guid& from);
  void MergeFrom(const guid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(guid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lo = 1;
  bool has_lo() const;
  void clear_lo();
  static const int kLoFieldNumber = 1;
  ::google::protobuf::uint64 lo() const;
  void set_lo(::google::protobuf::uint64 value);

  // optional fixed64 hi = 2;
  bool has_hi() const;
  void clear_hi();
  static const int kHiFieldNumber = 2;
  ::google::protobuf::uint64 hi() const;
  void set_hi(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DataContracts.guid)
 private:
  void set_has_lo();
  void clear_has_lo();
  void set_has_hi();
  void clear_has_hi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 lo_;
  ::google::protobuf::uint64 hi_;
  friend struct protobuf_DataContract_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandInvokeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataContracts.CommandInvokeData) */ {
 public:
  CommandInvokeData();
  virtual ~CommandInvokeData();

  CommandInvokeData(const CommandInvokeData& from);

  inline CommandInvokeData& operator=(const CommandInvokeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandInvokeData(CommandInvokeData&& from) noexcept
    : CommandInvokeData() {
    *this = ::std::move(from);
  }

  inline CommandInvokeData& operator=(CommandInvokeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandInvokeData& default_instance();

  static inline const CommandInvokeData* internal_default_instance() {
    return reinterpret_cast<const CommandInvokeData*>(
               &_CommandInvokeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CommandInvokeData* other);
  friend void swap(CommandInvokeData& a, CommandInvokeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandInvokeData* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandInvokeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommandInvokeData& from);
  void MergeFrom(const CommandInvokeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandInvokeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string paths = 2;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 2;
  const ::std::string& paths(int index) const;
  ::std::string* mutable_paths(int index);
  void set_paths(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_paths(int index, ::std::string&& value);
  #endif
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, size_t size);
  ::std::string* add_paths();
  void add_paths(const ::std::string& value);
  #if LANG_CXX11
  void add_paths(::std::string&& value);
  #endif
  void add_paths(const char* value);
  void add_paths(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_paths();

  // required string extraArgs = 3;
  bool has_extraargs() const;
  void clear_extraargs();
  static const int kExtraArgsFieldNumber = 3;
  const ::std::string& extraargs() const;
  void set_extraargs(const ::std::string& value);
  #if LANG_CXX11
  void set_extraargs(::std::string&& value);
  #endif
  void set_extraargs(const char* value);
  void set_extraargs(const char* value, size_t size);
  ::std::string* mutable_extraargs();
  ::std::string* release_extraargs();
  void set_allocated_extraargs(::std::string* extraargs);

  // required .DataContracts.guid commandId = 1;
  bool has_commandid() const;
  void clear_commandid();
  static const int kCommandIdFieldNumber = 1;
  const ::DataContracts::guid& commandid() const;
  ::DataContracts::guid* mutable_commandid();
  ::DataContracts::guid* release_commandid();
  void set_allocated_commandid(::DataContracts::guid* commandid);

  // @@protoc_insertion_point(class_scope:DataContracts.CommandInvokeData)
 private:
  void set_has_commandid();
  void clear_has_commandid();
  void set_has_extraargs();
  void clear_has_extraargs();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> paths_;
  ::google::protobuf::internal::ArenaStringPtr extraargs_;
  ::DataContracts::guid* commandid_;
  friend struct protobuf_DataContract_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandInvokeResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataContracts.CommandInvokeResult) */ {
 public:
  CommandInvokeResult();
  virtual ~CommandInvokeResult();

  CommandInvokeResult(const CommandInvokeResult& from);

  inline CommandInvokeResult& operator=(const CommandInvokeResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandInvokeResult(CommandInvokeResult&& from) noexcept
    : CommandInvokeResult() {
    *this = ::std::move(from);
  }

  inline CommandInvokeResult& operator=(CommandInvokeResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandInvokeResult& default_instance();

  static inline const CommandInvokeResult* internal_default_instance() {
    return reinterpret_cast<const CommandInvokeResult*>(
               &_CommandInvokeResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CommandInvokeResult* other);
  friend void swap(CommandInvokeResult& a, CommandInvokeResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandInvokeResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandInvokeResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommandInvokeResult& from);
  void MergeFrom(const CommandInvokeResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandInvokeResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .DataContracts.ShellResult result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::DataContracts::ShellResult result() const;
  void set_result(::DataContracts::ShellResult value);

  // @@protoc_insertion_point(class_scope:DataContracts.CommandInvokeResult)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int result_;
  friend struct protobuf_DataContract_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MenuItemData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataContracts.MenuItemData) */ {
 public:
  MenuItemData();
  virtual ~MenuItemData();

  MenuItemData(const MenuItemData& from);

  inline MenuItemData& operator=(const MenuItemData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MenuItemData(MenuItemData&& from) noexcept
    : MenuItemData() {
    *this = ::std::move(from);
  }

  inline MenuItemData& operator=(MenuItemData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MenuItemData& default_instance();

  static inline const MenuItemData* internal_default_instance() {
    return reinterpret_cast<const MenuItemData*>(
               &_MenuItemData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MenuItemData* other);
  friend void swap(MenuItemData& a, MenuItemData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MenuItemData* New() const PROTOBUF_FINAL { return New(NULL); }

  MenuItemData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MenuItemData& from);
  void MergeFrom(const MenuItemData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MenuItemData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataContracts.MenuItemData subMenuItems = 5;
  int submenuitems_size() const;
  void clear_submenuitems();
  static const int kSubMenuItemsFieldNumber = 5;
  const ::DataContracts::MenuItemData& submenuitems(int index) const;
  ::DataContracts::MenuItemData* mutable_submenuitems(int index);
  ::DataContracts::MenuItemData* add_submenuitems();
  ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >*
      mutable_submenuitems();
  const ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >&
      submenuitems() const;

  // optional string header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::std::string& header() const;
  void set_header(const ::std::string& value);
  #if LANG_CXX11
  void set_header(::std::string&& value);
  #endif
  void set_header(const char* value);
  void set_header(const char* value, size_t size);
  ::std::string* mutable_header();
  ::std::string* release_header();
  void set_allocated_header(::std::string* header);

  // optional bytes icon = 3;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 3;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const void* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // required .DataContracts.guid commandId = 2;
  bool has_commandid() const;
  void clear_commandid();
  static const int kCommandIdFieldNumber = 2;
  const ::DataContracts::guid& commandid() const;
  ::DataContracts::guid* mutable_commandid();
  ::DataContracts::guid* release_commandid();
  void set_allocated_commandid(::DataContracts::guid* commandid);

  // optional bool isEnabled = 4;
  bool has_isenabled() const;
  void clear_isenabled();
  static const int kIsEnabledFieldNumber = 4;
  bool isenabled() const;
  void set_isenabled(bool value);

  // @@protoc_insertion_point(class_scope:DataContracts.MenuItemData)
 private:
  void set_has_header();
  void clear_has_header();
  void set_has_commandid();
  void clear_has_commandid();
  void set_has_icon();
  void clear_has_icon();
  void set_has_isenabled();
  void clear_has_isenabled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData > submenuitems_;
  ::google::protobuf::internal::ArenaStringPtr header_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::DataContracts::guid* commandid_;
  bool isenabled_;
  friend struct protobuf_DataContract_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MenuData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataContracts.MenuData) */ {
 public:
  MenuData();
  virtual ~MenuData();

  MenuData(const MenuData& from);

  inline MenuData& operator=(const MenuData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MenuData(MenuData&& from) noexcept
    : MenuData() {
    *this = ::std::move(from);
  }

  inline MenuData& operator=(MenuData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MenuData& default_instance();

  static inline const MenuData* internal_default_instance() {
    return reinterpret_cast<const MenuData*>(
               &_MenuData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MenuData* other);
  friend void swap(MenuData& a, MenuData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MenuData* New() const PROTOBUF_FINAL { return New(NULL); }

  MenuData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MenuData& from);
  void MergeFrom(const MenuData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MenuData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataContracts.MenuItemData items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::DataContracts::MenuItemData& items(int index) const;
  ::DataContracts::MenuItemData* mutable_items(int index);
  ::DataContracts::MenuItemData* add_items();
  ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >&
      items() const;

  // optional .DataContracts.ShellResult result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::DataContracts::ShellResult result() const;
  void set_result(::DataContracts::ShellResult value);

  // @@protoc_insertion_point(class_scope:DataContracts.MenuData)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData > items_;
  int result_;
  friend struct protobuf_DataContract_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// guid

// optional fixed64 lo = 1;
inline bool guid::has_lo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guid::set_has_lo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guid::clear_has_lo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guid::clear_lo() {
  lo_ = GOOGLE_ULONGLONG(0);
  clear_has_lo();
}
inline ::google::protobuf::uint64 guid::lo() const {
  // @@protoc_insertion_point(field_get:DataContracts.guid.lo)
  return lo_;
}
inline void guid::set_lo(::google::protobuf::uint64 value) {
  set_has_lo();
  lo_ = value;
  // @@protoc_insertion_point(field_set:DataContracts.guid.lo)
}

// optional fixed64 hi = 2;
inline bool guid::has_hi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guid::set_has_hi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guid::clear_has_hi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guid::clear_hi() {
  hi_ = GOOGLE_ULONGLONG(0);
  clear_has_hi();
}
inline ::google::protobuf::uint64 guid::hi() const {
  // @@protoc_insertion_point(field_get:DataContracts.guid.hi)
  return hi_;
}
inline void guid::set_hi(::google::protobuf::uint64 value) {
  set_has_hi();
  hi_ = value;
  // @@protoc_insertion_point(field_set:DataContracts.guid.hi)
}

// -------------------------------------------------------------------

// CommandInvokeData

// required .DataContracts.guid commandId = 1;
inline bool CommandInvokeData::has_commandid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommandInvokeData::set_has_commandid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommandInvokeData::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommandInvokeData::clear_commandid() {
  if (commandid_ != NULL) commandid_->::DataContracts::guid::Clear();
  clear_has_commandid();
}
inline const ::DataContracts::guid& CommandInvokeData::commandid() const {
  const ::DataContracts::guid* p = commandid_;
  // @@protoc_insertion_point(field_get:DataContracts.CommandInvokeData.commandId)
  return p != NULL ? *p : *reinterpret_cast<const ::DataContracts::guid*>(
      &::DataContracts::_guid_default_instance_);
}
inline ::DataContracts::guid* CommandInvokeData::mutable_commandid() {
  set_has_commandid();
  if (commandid_ == NULL) {
    commandid_ = new ::DataContracts::guid;
  }
  // @@protoc_insertion_point(field_mutable:DataContracts.CommandInvokeData.commandId)
  return commandid_;
}
inline ::DataContracts::guid* CommandInvokeData::release_commandid() {
  // @@protoc_insertion_point(field_release:DataContracts.CommandInvokeData.commandId)
  clear_has_commandid();
  ::DataContracts::guid* temp = commandid_;
  commandid_ = NULL;
  return temp;
}
inline void CommandInvokeData::set_allocated_commandid(::DataContracts::guid* commandid) {
  delete commandid_;
  commandid_ = commandid;
  if (commandid) {
    set_has_commandid();
  } else {
    clear_has_commandid();
  }
  // @@protoc_insertion_point(field_set_allocated:DataContracts.CommandInvokeData.commandId)
}

// repeated string paths = 2;
inline int CommandInvokeData::paths_size() const {
  return paths_.size();
}
inline void CommandInvokeData::clear_paths() {
  paths_.Clear();
}
inline const ::std::string& CommandInvokeData::paths(int index) const {
  // @@protoc_insertion_point(field_get:DataContracts.CommandInvokeData.paths)
  return paths_.Get(index);
}
inline ::std::string* CommandInvokeData::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:DataContracts.CommandInvokeData.paths)
  return paths_.Mutable(index);
}
inline void CommandInvokeData::set_paths(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DataContracts.CommandInvokeData.paths)
  paths_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CommandInvokeData::set_paths(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:DataContracts.CommandInvokeData.paths)
  paths_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CommandInvokeData::set_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DataContracts.CommandInvokeData.paths)
}
inline void CommandInvokeData::set_paths(int index, const char* value, size_t size) {
  paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DataContracts.CommandInvokeData.paths)
}
inline ::std::string* CommandInvokeData::add_paths() {
  // @@protoc_insertion_point(field_add_mutable:DataContracts.CommandInvokeData.paths)
  return paths_.Add();
}
inline void CommandInvokeData::add_paths(const ::std::string& value) {
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DataContracts.CommandInvokeData.paths)
}
#if LANG_CXX11
inline void CommandInvokeData::add_paths(::std::string&& value) {
  paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:DataContracts.CommandInvokeData.paths)
}
#endif
inline void CommandInvokeData::add_paths(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DataContracts.CommandInvokeData.paths)
}
inline void CommandInvokeData::add_paths(const char* value, size_t size) {
  paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DataContracts.CommandInvokeData.paths)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandInvokeData::paths() const {
  // @@protoc_insertion_point(field_list:DataContracts.CommandInvokeData.paths)
  return paths_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CommandInvokeData::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:DataContracts.CommandInvokeData.paths)
  return &paths_;
}

// required string extraArgs = 3;
inline bool CommandInvokeData::has_extraargs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandInvokeData::set_has_extraargs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandInvokeData::clear_has_extraargs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandInvokeData::clear_extraargs() {
  extraargs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extraargs();
}
inline const ::std::string& CommandInvokeData::extraargs() const {
  // @@protoc_insertion_point(field_get:DataContracts.CommandInvokeData.extraArgs)
  return extraargs_.GetNoArena();
}
inline void CommandInvokeData::set_extraargs(const ::std::string& value) {
  set_has_extraargs();
  extraargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataContracts.CommandInvokeData.extraArgs)
}
#if LANG_CXX11
inline void CommandInvokeData::set_extraargs(::std::string&& value) {
  set_has_extraargs();
  extraargs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DataContracts.CommandInvokeData.extraArgs)
}
#endif
inline void CommandInvokeData::set_extraargs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extraargs();
  extraargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataContracts.CommandInvokeData.extraArgs)
}
inline void CommandInvokeData::set_extraargs(const char* value, size_t size) {
  set_has_extraargs();
  extraargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataContracts.CommandInvokeData.extraArgs)
}
inline ::std::string* CommandInvokeData::mutable_extraargs() {
  set_has_extraargs();
  // @@protoc_insertion_point(field_mutable:DataContracts.CommandInvokeData.extraArgs)
  return extraargs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandInvokeData::release_extraargs() {
  // @@protoc_insertion_point(field_release:DataContracts.CommandInvokeData.extraArgs)
  clear_has_extraargs();
  return extraargs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandInvokeData::set_allocated_extraargs(::std::string* extraargs) {
  if (extraargs != NULL) {
    set_has_extraargs();
  } else {
    clear_has_extraargs();
  }
  extraargs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extraargs);
  // @@protoc_insertion_point(field_set_allocated:DataContracts.CommandInvokeData.extraArgs)
}

// -------------------------------------------------------------------

// CommandInvokeResult

// optional .DataContracts.ShellResult result = 1;
inline bool CommandInvokeResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommandInvokeResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommandInvokeResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommandInvokeResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DataContracts::ShellResult CommandInvokeResult::result() const {
  // @@protoc_insertion_point(field_get:DataContracts.CommandInvokeResult.result)
  return static_cast< ::DataContracts::ShellResult >(result_);
}
inline void CommandInvokeResult::set_result(::DataContracts::ShellResult value) {
  assert(::DataContracts::ShellResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DataContracts.CommandInvokeResult.result)
}

// optional bytes data = 2;
inline bool CommandInvokeResult::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandInvokeResult::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandInvokeResult::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandInvokeResult::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CommandInvokeResult::data() const {
  // @@protoc_insertion_point(field_get:DataContracts.CommandInvokeResult.data)
  return data_.GetNoArena();
}
inline void CommandInvokeResult::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataContracts.CommandInvokeResult.data)
}
#if LANG_CXX11
inline void CommandInvokeResult::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DataContracts.CommandInvokeResult.data)
}
#endif
inline void CommandInvokeResult::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataContracts.CommandInvokeResult.data)
}
inline void CommandInvokeResult::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataContracts.CommandInvokeResult.data)
}
inline ::std::string* CommandInvokeResult::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:DataContracts.CommandInvokeResult.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandInvokeResult::release_data() {
  // @@protoc_insertion_point(field_release:DataContracts.CommandInvokeResult.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandInvokeResult::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:DataContracts.CommandInvokeResult.data)
}

// -------------------------------------------------------------------

// MenuItemData

// optional string header = 1;
inline bool MenuItemData::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MenuItemData::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MenuItemData::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MenuItemData::clear_header() {
  header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header();
}
inline const ::std::string& MenuItemData::header() const {
  // @@protoc_insertion_point(field_get:DataContracts.MenuItemData.header)
  return header_.GetNoArena();
}
inline void MenuItemData::set_header(const ::std::string& value) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataContracts.MenuItemData.header)
}
#if LANG_CXX11
inline void MenuItemData::set_header(::std::string&& value) {
  set_has_header();
  header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DataContracts.MenuItemData.header)
}
#endif
inline void MenuItemData::set_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataContracts.MenuItemData.header)
}
inline void MenuItemData::set_header(const char* value, size_t size) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataContracts.MenuItemData.header)
}
inline ::std::string* MenuItemData::mutable_header() {
  set_has_header();
  // @@protoc_insertion_point(field_mutable:DataContracts.MenuItemData.header)
  return header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MenuItemData::release_header() {
  // @@protoc_insertion_point(field_release:DataContracts.MenuItemData.header)
  clear_has_header();
  return header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MenuItemData::set_allocated_header(::std::string* header) {
  if (header != NULL) {
    set_has_header();
  } else {
    clear_has_header();
  }
  header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header);
  // @@protoc_insertion_point(field_set_allocated:DataContracts.MenuItemData.header)
}

// required .DataContracts.guid commandId = 2;
inline bool MenuItemData::has_commandid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MenuItemData::set_has_commandid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MenuItemData::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MenuItemData::clear_commandid() {
  if (commandid_ != NULL) commandid_->::DataContracts::guid::Clear();
  clear_has_commandid();
}
inline const ::DataContracts::guid& MenuItemData::commandid() const {
  const ::DataContracts::guid* p = commandid_;
  // @@protoc_insertion_point(field_get:DataContracts.MenuItemData.commandId)
  return p != NULL ? *p : *reinterpret_cast<const ::DataContracts::guid*>(
      &::DataContracts::_guid_default_instance_);
}
inline ::DataContracts::guid* MenuItemData::mutable_commandid() {
  set_has_commandid();
  if (commandid_ == NULL) {
    commandid_ = new ::DataContracts::guid;
  }
  // @@protoc_insertion_point(field_mutable:DataContracts.MenuItemData.commandId)
  return commandid_;
}
inline ::DataContracts::guid* MenuItemData::release_commandid() {
  // @@protoc_insertion_point(field_release:DataContracts.MenuItemData.commandId)
  clear_has_commandid();
  ::DataContracts::guid* temp = commandid_;
  commandid_ = NULL;
  return temp;
}
inline void MenuItemData::set_allocated_commandid(::DataContracts::guid* commandid) {
  delete commandid_;
  commandid_ = commandid;
  if (commandid) {
    set_has_commandid();
  } else {
    clear_has_commandid();
  }
  // @@protoc_insertion_point(field_set_allocated:DataContracts.MenuItemData.commandId)
}

// optional bytes icon = 3;
inline bool MenuItemData::has_icon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MenuItemData::set_has_icon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MenuItemData::clear_has_icon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MenuItemData::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
inline const ::std::string& MenuItemData::icon() const {
  // @@protoc_insertion_point(field_get:DataContracts.MenuItemData.icon)
  return icon_.GetNoArena();
}
inline void MenuItemData::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataContracts.MenuItemData.icon)
}
#if LANG_CXX11
inline void MenuItemData::set_icon(::std::string&& value) {
  set_has_icon();
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DataContracts.MenuItemData.icon)
}
#endif
inline void MenuItemData::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataContracts.MenuItemData.icon)
}
inline void MenuItemData::set_icon(const void* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataContracts.MenuItemData.icon)
}
inline ::std::string* MenuItemData::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:DataContracts.MenuItemData.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MenuItemData::release_icon() {
  // @@protoc_insertion_point(field_release:DataContracts.MenuItemData.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MenuItemData::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:DataContracts.MenuItemData.icon)
}

// optional bool isEnabled = 4;
inline bool MenuItemData::has_isenabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MenuItemData::set_has_isenabled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MenuItemData::clear_has_isenabled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MenuItemData::clear_isenabled() {
  isenabled_ = false;
  clear_has_isenabled();
}
inline bool MenuItemData::isenabled() const {
  // @@protoc_insertion_point(field_get:DataContracts.MenuItemData.isEnabled)
  return isenabled_;
}
inline void MenuItemData::set_isenabled(bool value) {
  set_has_isenabled();
  isenabled_ = value;
  // @@protoc_insertion_point(field_set:DataContracts.MenuItemData.isEnabled)
}

// repeated .DataContracts.MenuItemData subMenuItems = 5;
inline int MenuItemData::submenuitems_size() const {
  return submenuitems_.size();
}
inline void MenuItemData::clear_submenuitems() {
  submenuitems_.Clear();
}
inline const ::DataContracts::MenuItemData& MenuItemData::submenuitems(int index) const {
  // @@protoc_insertion_point(field_get:DataContracts.MenuItemData.subMenuItems)
  return submenuitems_.Get(index);
}
inline ::DataContracts::MenuItemData* MenuItemData::mutable_submenuitems(int index) {
  // @@protoc_insertion_point(field_mutable:DataContracts.MenuItemData.subMenuItems)
  return submenuitems_.Mutable(index);
}
inline ::DataContracts::MenuItemData* MenuItemData::add_submenuitems() {
  // @@protoc_insertion_point(field_add:DataContracts.MenuItemData.subMenuItems)
  return submenuitems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >*
MenuItemData::mutable_submenuitems() {
  // @@protoc_insertion_point(field_mutable_list:DataContracts.MenuItemData.subMenuItems)
  return &submenuitems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >&
MenuItemData::submenuitems() const {
  // @@protoc_insertion_point(field_list:DataContracts.MenuItemData.subMenuItems)
  return submenuitems_;
}

// -------------------------------------------------------------------

// MenuData

// optional .DataContracts.ShellResult result = 1;
inline bool MenuData::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MenuData::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MenuData::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MenuData::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DataContracts::ShellResult MenuData::result() const {
  // @@protoc_insertion_point(field_get:DataContracts.MenuData.result)
  return static_cast< ::DataContracts::ShellResult >(result_);
}
inline void MenuData::set_result(::DataContracts::ShellResult value) {
  assert(::DataContracts::ShellResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DataContracts.MenuData.result)
}

// repeated .DataContracts.MenuItemData items = 2;
inline int MenuData::items_size() const {
  return items_.size();
}
inline void MenuData::clear_items() {
  items_.Clear();
}
inline const ::DataContracts::MenuItemData& MenuData::items(int index) const {
  // @@protoc_insertion_point(field_get:DataContracts.MenuData.items)
  return items_.Get(index);
}
inline ::DataContracts::MenuItemData* MenuData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataContracts.MenuData.items)
  return items_.Mutable(index);
}
inline ::DataContracts::MenuItemData* MenuData::add_items() {
  // @@protoc_insertion_point(field_add:DataContracts.MenuData.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >*
MenuData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataContracts.MenuData.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DataContracts::MenuItemData >&
MenuData::items() const {
  // @@protoc_insertion_point(field_list:DataContracts.MenuData.items)
  return items_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace DataContracts

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DataContracts::ShellResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DataContracts::ShellResult>() {
  return ::DataContracts::ShellResult_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataContract_2eproto__INCLUDED
